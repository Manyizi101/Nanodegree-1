## then add the trajectory
lines(x[,1], x[,2], lwd=2)
}
rxy <- apply(coordinates(map),2,range)
rxy
nmo <- NMs.randomShiftRotation(na.omit(anim1), rshift = TRUE, rrot = TRUE,
rx = rxy[,1], ry = rxy[,2], treatment.func = myfunc,
treatment.par = map, nrep=9)
par(mfrow = c(3,3))
tmp <- testNM(nmo)
?par
x = c(55,65,73,77,79,80,81,89,95,50,59,60,61,71,75,78,81,85,90)
sample(x,20)
sample(x,1)
sample(x,1)
length(x)
x = c(55,65,73,77,79,79,80,81,89,95,50,59,60,61,71,75,78,81,85,90)
sample(x,20)
sample(x,10)
sample(x,10)
sample(x,20)
5/16
today()
?date
date()
?as.date
??as.date
as.Date(date(),"%Y-%m%-%d")
"20114-12-12"
"20114-12-12"-"2014-08-02"
"2014-12-12"-"2014-08-02"
as.Date("2014-12-12")
as.Date("2014-12-12")-as.Date("2014-08-02")
?write.csv
nstall.packages('wildlifeDI')
install.packages('wildlifeDI')
library(knitr)
\documentclass{article}
iris
install.packages("WildlifeDI")
??gIntersection
??NMs.randomShiftRotation
??SpatialPoints
library(adehabitatLT)
library(adehabitatHR)
library(wildlifeDI)
library(rgeos)
library(sp)
library(raster)
install.packages("rgeos")
install.packages("sp")
install.packages("sp")
library(sp)
install.packages("rgeos")
setwd("\Users\Cinkie\Dropbox")
honey = read.csv("new_honey.csv")
cyril = read.csv("new_cyril.csv")
setwd("\Users\Cinkie\Documents\2014Fall\Miller")
setwd("/Users/Cinkie/Documents/2014Fall/RA/Miller")
setwd("/Users/Cinkie/Documents/2014Fall/RA/Miller")
setwd("/Users/Cinkie/Documents/2014Fall/RA/Miller")
load("/Users/Cinkie/Documents/2015 SPRING/Stat Learning/5.R.RData")
View(Xy)
class(Xy)
lm.fit = lm(y~X1+X2, data=Xy)
summary(lm.fit)
glm.fit = glm(y~X1+X2, data=Xy)
summary(glm.fit)
matplot(Xy,type="l")
?matplot
View(Xy)
?boot
library(ISLR)
?boot
??boot
library(boot)
alpha.fn=function(data, index){
X = data$X[index]
Y = data$Y[index]
return((var(Y)-cov(X,Y))/(var(X)+var(Y)-2*cov(X,Y)))
}
alpha.fn(Xy,1:100)
View(Xy)
alpha.fn=function(data, index){
X = data$X1[index]
Y = data$y[index]
return((var(Y)-cov(X,Y))/(var(X)+var(Y)-2*cov(X,Y)))
}
alpha.fn(Xy,1:100)
?sample
set.seed(1)
alpha.fn (Xy,sample(1:100,100,replace=TRUE))
boot.out=boot(Xy,alpha.fn,R=1000)
boot.out
plot(boot.out)
?boot
ample(1:100,100,replace=TRUE)
sample(1:100,100,replace=TRUE)
sample(1:100,100,replace=TRUE)
?cv.glmnet
library(glmnet)
?cv.glmnet
40/(250+64)
200^2/500 + 200^2/500 + 200^2/1000 + 200^2/1000
0.9966+0.9989+0.9972
(0.9966+0.9989+0.9972)/3
1-(0.9966+0.9989+0.9972)/3
1-205211/205227
1-101758/161563
1-101758/205211
1-101758/205227
1-101758/161576
0.1/(250/400+64/400)
0.1/((250/400)*(64/400))
1-(3/7)^2-(4/7)^2
1-(1/3)^2-(2/3)^2
1-(1/4)^2-(3/4)^2
0.7*0.4897959+0.3*0.4444444
0.4*0.375+0.6*0.4444444
?log
a=4/7
b=3/7
-alog2(a)-blog2(b)
-a*log2(a)-b*log2(b)
a=1/3
b=2/3
-a*log2(a)-b*log2(b)
a=1/4
b=3/4
-a*log2(a)-b*log2(b)
a=1/2
b=1/2
-a*log2(a)-b*log2(b)
1-0.7*0.985-0.3*0.918
1-0.4*0.811-0.6*0.918
55+35
a=10/19
b=1-a
1-a^2-b^2
a=8/19
b=1-A
b=1-a
c=1/2
d=1/2
e=6/11
f=1-e
a*(1-c^2-d^2)+b*(1-e^2-f^2)
a=95/190
b=1-a
c=55/95
d=1-c
e=45/95
f=1-e
a*(1-c^2-d^2)+b*(1-e^2-f^2)
c=65/95
d=1-c
e=35/95
f=1-e
a*(1-c^2-d^2)+b*(1-e^2-f^2)
11.5*13.6
10.3*9.10
(8*(37)+10*(35)+6*(28))/24
a = (8*(37)+10*(35)+6*(28))/24
37-a
35-a
28-a
sqrt(2)
(1/4.5)*sqrt((8*3.083^2 + 10*1.083^2 + 6*5.9167^2)/3)
?power
?power.t.test
install.packages("pwr")
library(pwr)
?pwr
pwr.anova.test(f=2.25,k=4,n=19,sig.level=0.05)
?pwr.anova.test
?f
?pf
pf(0.95,3,15,2.25)
qf(0.95,3,15,2.25)
rf(19,3,15,2.25)
df(0.95,3,15,2.25)
pf(0.95,3,15,2.25)
n=19
sigma=3.5
sem=sigma/sqrt(n)
sem
alpha=0.05
mu0=16.03
I=c(alpha/2,1-alpha/2)
q=qnorm(I, mean=mu0,sd=sem)
q
0.214/0.5
(0.214/0.5)*0.13
(0.214/0.5)*0.13 + 0.83
?pwr
?pwr.anova.test
pwr.anova.test(k=4,n=c(5,5,4,5),f=19,sig.level=0.05)
pwr.anova.test(f=0.28,k=4,n=20,sig.level=0.05)
?dummy
??dummy
library(dumies)
library(dummies)
blue 130
green 120
green 111
red  145
green 134
blue 108
blue 140
red  149
red 155
green 131
red 148
color = c("blue","green","green","red","green","blue","blue","red","red","green","red")
bp = c(130,120,111,145,134,108,140,149,155,131,148)
a = data.frame(color,bp)
View(a)
dummy.data.frame(a)
=dummy.data.frame(a)
b=dummy.data.frame(a)
View(b)
b=dummy.data.frame(a, dummy.classes=c("blue","green"))
View(b)
b=dummy.data.frame(a)
View(b)
7.08333 + 9.08333
133-7
a = 50/95
a1=40/95
a2=55/95
b1=5/8
b2=3/8
c1=40/55
c2=15/55
a1*(1-b1^2-b2^2)+a2*(1-c1^2-c2^2)
c1=20/55
c2=35/55
a1*(1-b1^2-b2^2)+a2*(1-c1^2-c2^2)
0.4488-(0.427+0.465)/2
a=30/630
b=600/630
1-a^2-b^2
a=1/31
b=30/31
1-a^2-b^2
(1-a^2-b^2)*62/63
0.0624*62/63
0.0907-0.0614
a=3/23
b=1-a
1-a^2-b^2
(1-a^2-b^2)*23/63
0.0907-0.0828
a=3/23
b=20/23
1-a^2 - b^2
a=1/11
b=10/11
1-a^2 - b^2
(1-a^2 - b^2)*11/31
0.1652*11/31
0.05865-0.0624
61/63
a=9/14
b=1-a
-a*log(a)-b*log(b)
?log
log(e)
e
log(1)
log(10)
exp(3.4)
exp(2.3)
a=4/7
b=1-a
?log
-a*log2(a)-b*log2(b)
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
data(mtcars)
names(mtcars)
mean(mtcars$mpg)
setwd('/Users/Cinkie/Documents/Nanodegree/Data Analysis with R')
statesInfo = read.csv('stateData.csv')
View(statesInfo)
subset(statesInfo, state.region == 1)
statesInfo[statesInfo$state.region == 1,]
View(mtcars)
mtcars$row.names[mtcars$mpg>=30 or mtcars$hp<60]
?or
mtcars$row.names[mtcars$mpg>=30 | mtcars$hp<60]
mtcars[mtcars$mpg>=30 | mtcars$hp<60]
mtcars[mtcars$mpg>=30 | mtcars$hp<60,]
reddit = read.csv('reddit.csv')
View(reddit)
table(reddit$employment.status)
summary(reddit)
str(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data=reddit, x=age.range)
?levels
levels(reddit$age.range) = c("Under 18", "18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above")
levels(reddit$age.range)
qplot(data=reddit, x=age.range)
setwd('/Users/Cinkie/Documents/Nanodegree/Data Analysis with R')
pf = read.csv('pseudo_facebook.tsv', sep = '\t')
names(pf)
qplot(x=dob_day, data=pf)
scale_x_discrete(breaks=1:31)
qplot(x=dob_day, data=pf) +
scale_x_discrete(breaks=1:31)
qplot(x=dob_day, data=pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(-dob_month, ncol = 3)
qplot(x=dob_day, data=pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
names(pf)
qplot(x=friend_count, data=pf)
?qplot
qplot(x=friend_count, data=pf,xlim=c(0,2300))
qplot(x=friend_count, data=pf,xlim=c(0,1500))
qplot(x=friend_count, data=pf, xlim=c(0,1000)) +
scale_x_continuous(limits=c(0,1000))
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~friend_count)
names(pf)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
qplot(x=tenure, data=pf, color=I('black'), fill=I('#099DD9'))
qplot(x=tenure, data=pf, binwidth = 30, color=I('black'), fill=I('#099DD9'))
qplot(x=tenure, data=pf, binwidth = 365, color=I('black'), fill=I('#099DD9'))
qplot(x=tenure, data=pf, binwidth = 360, color=I('black'), fill=I('#099DD9'))
qplot(x=tenure, data=pf, binwidth = 30, color=I('black'), fill=I('#099DD9'))
qplot(x=tenure/365, data=pf, binwidth = .25,
color=I('black'), fill=I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), lim=c(0,7))
qplot(x=tenure/365, data=pf, binwidth = .25,
xlab = "Number of years using Facebook",
ylab = "Number of users in sample",
color=I('black'), fill=I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), lim=c(0,7))
names(pf)
qplot(x=age, data = pf)
qplot(x=age, data = pf, binwidth=1)
qplot(x=age, data = pf, binwidth=1, xlim=c(0,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(15,100),
qplot(x=age, data = pf, binwidth=1, xlim=c(15,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(15,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(15,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(10,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(0,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(5,100))
seq(1,7,1)
seq(1,5,50)
?seq
seq(1,50,5)
qplot(x=age, data = pf, binwidth=1, xlim=c(5,100)) +
scale_x_continuous(breaks = seq(5,100,5))
qplot(x=age, data = pf, binwidth=1, xlim=c(0,100)) +
scale_x_continuous(breaks = seq(5,100,5))
qplot(x=age, data = pf, binwidth=1, xlim=c(0,100))
qplot(x=age, data = pf, binwidth=1, xlim=c(0,100)) +
scale_x_continuous(breaks = seq(5,100,5))
qplot(x=age, data = pf, binwidth=1, xlim=c(0,100)) +
scale_x_continuous(breaks = seq(0,100,5))
qplot(x=age, data = pf, binwidth=1, xlim=c(0,110)) +
scale_x_continuous(breaks = seq(0,110,10))
qplot(x=age, data = pf, binwidth=1,
color = I('black'), fill = I('#F79420'))
qplot(x=age, data = pf, binwidth=1,
color = I('black'), fill = I('#F79420')) +
scale_x_discrete(breaks=seq(0,113,5))
qplot(x=friend_count, data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
require(gridExtra)
p1 = qplot(x=friend_count, data=pf) + scale_x_log10("friend_count")
p1 = qplot(x=friend_count, data=pf) + scale_x_log10()
p3 = qplot(x=friend_count, data=pf) + scale_x_sqrt()
grid.arrage(p1,p2,p3)
grid.arrange(p1,p2,p3)
p1 = qplot(x=friend_count, data=pf)
p2 = qplot(x=friend_count, data=pf) + scale_x_log10()
p3 = qplot(x=friend_count, data=pf) + scale_x_sqrt()
grid.arrange(p1,p2,p3)
p1 = qplot(x=friend_count, data=pf, binwidth = 1)
p2 = qplot(x=friend_count, data=pf, binwidth = 1) + scale_x_log10()
p3 = qplot(x=friend_count, data=pf, binwidth = 1) + scale_x_sqrt()
grid.arrange(p1,p2,p3)
p1 = ggplot(aes(x=friend_count), data=pf) + geom_histogram()
p2 = p1 + scale_x_log10()
p3 = p1 + scale_x_sqrt()
grid.arrange(p1,p2,p3, ncol = 1)
qplot(x=friend_count, data = subset(pf, !is.na(gender)), binwidth=10)+
scale_x_continuous(lim=c(0,1000), breaks = seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x=friend_count, data = subset(pf, !is.na(gender)), binwidth=10,
geom = 'freqpoly', color = gender)+
scale_x_continuous(lim=c(0,1000), breaks = seq(0,1000,50))
qplot(x=friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)), binwidth=10,
geom = 'freqpoly', color = gender)+
scale_x_continuous(lim=c(0,1000), breaks = seq(0,1000,50))
names(pf)
qplot(x=likes, data=pf)
summary(pf$likes)
qplot(x=likes, data=pf, xlim=c(0,100))
qplot(x=likes, data=pf, xlim=c(0,100), binwidth = 1)
qplot(x=likes, data=pf, xlim=c(0,100), binwidth = 1,
geom = 'frepoly', color=gender)
qplot(x=likes, data=pf, xlim=c(0,100), binwidth = 1,
geom = 'freqpoly', color=gender)
qplot(x=likes, data=subset(pf, !is.na(gender)), xlim=c(0,100), binwidth = 1,
geom = 'freqpoly', color=gender)
qplot(x=likes, data=subset(pf, !is.na(gender)), xlim=c(0,100), binwidth = 1,
geom = 'freqpoly', color=gender) +
scale_x_continuous(lim=c(0,100), breaks = seq(0,100,5))
qplot(x=www_likes, data=subset(pf, !is.na(gender)), xlim=c(0,100), binwidth = 1,
geom = 'freqpoly', color=gender) +
scale_x_continuous(lim=c(0,100), breaks = seq(0,100,5))
qplot(x=www_likes, data=subset(pf, !is.na(gender)), binwidth = 1,
geom = 'freqpoly', color=gender) +
scale_x_continuous(lim=c(0,100), breaks = seq(0,100,5)) +
scale_x_log10()
qplot(x=www_likes, data=subset(pf, !is.na(gender)), binwidth = 1,
geom = 'freqpoly', color=gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x=www_likes, data=subset(pf, !is.na(gender)), binwidth = 1,
geom = 'freqpoly', color=gender) +
scale_x_continuous()
sum(pf$www_likes[pf$gender == 1])
sum(pf$www_likes[pf$gender == 1])
pf$www_likes[pf$gender == 1]
View(pf)
by(pf$www_likes, pf$gender, sum)
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly', color=gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x=gender, y = friend_count, data=subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x=gender, y = friend_count, data=subset(pf, !is.na(gender)),
ylim=c(0,1000), geom = 'boxplot')
qplot(x=gender, y = friend_count, data=subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim=c(0,100))
qplot(x=gender, y = friend_count, data=subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim=c(0,1000))
qplot(x=gender, y = friend_count, data=subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim=c(0,250))
by(pf$friend_count, pf$gender, summary)
names(pf)
by(pf$friendships_initiated, pf$gender, summary)
by(pf$friendships_initiated, pf$gender, sum)
qplot(x=gender, y=friendships_initiated, data=subset(pf, !is.na(gender), geom='boxplot')
qplot(x=gender, y=friendships_initiated, data=subset(pf, !is.na(gender), geom='boxplot'))
```
qplot(x=gender, y=friendships_initiated, data=subset(pf, !is.na(gender), geom='boxplot'))
qplot(x=gender, y=friendships_initiated,
data=subset(pf, !is.na(gender), geom='boxplot')) +
coord_cartesian(ylim=c(0,150))
qplot(x=gender, y=friendships_initiated,
data=subset(pf, !is.na(gender), geom='boxplot')) +
coord_cartesian(ylim=c(0,1000))
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes >0)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes>0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
63947/(35056+63947)
sum(pf$mobile_check_in)/length(pf$mobile_check_in)
sum(pf$mobile_check_in==1)/length(pf$mobile_check_in)
data(diamonds)
data(diamond)
data(diamonds)
data('diamonds')
data(diamonds)
library(ggplot2)
data(diamonds)
??diamonds
data(diamonds)
data(diamonds)
diamonds = data(diamonds)
